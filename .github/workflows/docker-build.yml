name: Sleep Analysis Service Docker Build

on:
  push:
    branches: [ main, master, develop ]

  # Optional: Allow manual triggering
  workflow_dispatch:

jobs:
  docker:
    name: Build and Push Multi-Platform Docker Image
    runs-on: ubuntu-latest

    # Only run this job on pushes to main/master, not on pull requests
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch')

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3

    # Set up QEMU for cross-platform builds
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    # Set up Docker Buildx with increased memory
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
        driver-opts: |
          image=moby/buildkit:latest
          network=host

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Setup Hugging Face credentials for pulling models during build
    - name: Configure Hugging Face credentials
      run: |
        echo "HF_TOKEN=${{ secrets.HF_TOKEN }}" >> $GITHUB_ENV

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=sha,format=long
          type=ref,event=branch
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}

    # Build and push multi-platform image
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          HF_TOKEN=${{ secrets.HF_TOKEN }}
        # Increase memory limit to handle model downloads
        outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=Sleep Analysis Service with Mistral NLG support
